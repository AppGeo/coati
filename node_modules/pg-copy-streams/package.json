{
  "name": "pg-copy-streams",
  "version": "0.2.1",
  "description": "Low-Level COPY TO and COPY FROM streams for PostgreSQL in JavaScript using",
  "main": "index.js",
  "scripts": {
    "test": "node test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianc/node-pg-copy-streams.git"
  },
  "keywords": [
    "postgres",
    "copy",
    "in",
    "out",
    "stream"
  ],
  "author": {
    "name": "Brian M. Carlson"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/brianc/node-pg-copy-streams/issues"
  },
  "devDependencies": {
    "pg.js": "~2.8.1",
    "concat-stream": "~1.1.0",
    "gonna": "0.0.0",
    "lodash": "~2.2.1",
    "heroku-env": "~0.1.1"
  },
  "readme": "## pg-copy-streams\n\nCOPY FROM / COPY TO for node-postgres.  Stream from one database to another, and stuff.\n\n## how? what? huh?\n\nDid you know the _all powerful_ PostgreSQL supports streaming binary data directly into and out of a table?\nThis means you can take your favorite CSV or TSV or whatever format file and pipe it directly into an existing PostgreSQL table.\nYou can also take a table and pipe it directly to a file, another database, stdout, even to `/dev/null` if you're crazy!\n\nWhat this module gives you is a [Readable](http://nodejs.org/api/stream.html#stream_class_stream_readable) or [Writable](http://nodejs.org/api/stream.html#stream_class_stream_writable) stream directly into/out of a table in your database.\nThis mode of interfacing with your table is _very fast_ and _very brittle_.  You are responsible for properly encoding and ordering all your columns. If anything is out of place PostgreSQL will send you back an error.  The stream works within a transaction so you wont leave things in a 1/2 borked state, but it's still good to be aware of.\n\nIf you're not familiar with the feature (I wasn't either) you can read this for some good helps: http://www.postgresql.org/docs/9.3/static/sql-copy.html\n\n## examples\n\n### pipe from a table to stdout\n\n```js\nvar pg = require('pg');\nvar copyTo = require('pg-copy-streams').to;\n\npg.connect(function(err, client, done) {\n  var stream = client.query(copyTo('COPY my_table TO STDOUT'));\n  stream.pipe(process.stdout);\n  stream.on('end', done);\n  stream.on('error', done);\n});\n```\n\n### pipe from a file to table\n\n```js\nvar fs = require('fs');\nvar pg = require('pg');\nvar copyFrom = require('pg-copy-streams').from;\n\npg.connect(function(err, client, done) {\n  var text = 'COPY my_table FROM STDIN';\n  var stream = client.query(copyFrom('COPY my_table FROM STDIN'));\n  var fileStream = fs.createReadStream('some_file.tdv')\n  fileStream.pipe(stream);\n  fileStream.on('end', done);\n  fileStream.on('error', done);\n});\n```\n\n## install\n\n```sh\n$ npm install pg-copy-streams\n```\n\n## notice\n\nBefore you set out on this magical piping journey, you _really_ should read this: http://www.postgresql.org/docs/9.3/static/sql-copy.html, and you might want to take a look at the [tests](https://github.com/brianc/node-pg-copy-streams/tree/master/test) to get an idea of how things work.\n\n## contributing \n\nInstead of adding a bunch more code to the already bloated [node-postgres](https://github.com/brianc/node-postgres) I am trying to make the internals extensible and work on adding edge-case features as 3rd party modules.\nThis is one of those.\n\nPlease, if you have any issues with this, open an issue.\n\nBetter yet, submit a pull request.  I _love_ pull requests.\n\nGenerally how I work is if you submit a few pull requests and you're interested I'll make you a contributor and give you full access to everything.\n\nSince this isn't a module with tons of installs and dependent modules I hope we can work together on this to iterate faster here and make something really useful.\n\n## license\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Brian M. Carlson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/brianc/node-pg-copy-streams",
  "_id": "pg-copy-streams@0.2.1",
  "dist": {
    "shasum": "b90e83023203f4611d963f263d878dd9533eed3f"
  },
  "_from": "pg-copy-streams@",
  "_resolved": "https://registry.npmjs.org/pg-copy-streams/-/pg-copy-streams-0.2.1.tgz"
}
